"use client"

import localFont from "next/font/local";
import "./globals.css";
import {useRouter, usePathname} from "next/navigation";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

export default function RootLayout({children,}: Readonly<{ children: React.ReactNode; }>) {
  const router = useRouter();
  const pathname = usePathname();
  const tabs: ({key: string, href: string, label: string})[] = [
    {key: "home", href: "/", label: "home"},
    {key: "syllabaryTable", href: "/syllabary-table", label: "syllabary table"},
    {key: "romanToJapanese", href: "/roman-to-japanese", label: "roman to japanese"},
    {key: "syllabaryTraps", href: "/syllabary-traps", label: "syllabary traps"},
    {key: "syllabaryTraining", href: "/syllabary-training", label: "syllabary training"},
    {key: "vocabularyTranslate", href: "/vocabulary-translate", label: "vocabulary translate"},
    {key: "vocabularyTheme", href: "/vocabulary-theme", label: "vocabulary theme"},
    {key: "vocabularyDictionary", href: "/vocabulary-dictionary", label: "dictionary"},
  ];

  return (
    <html lang="fr">
    <body className={`${geistSans.variable} ${geistMono.variable} antialiased bg-gray-700 p-2`}>
    <nav>
      <ul className={"flex flex-wrap gap-2 full-size justify-between"}>
        {tabs.map((tab: {key: string, href: string, label: string}) => (
          <li className={
            `flex-auto
            cursor-pointer
            text-xl 
            text-center
            flex
            items-center
            justify-center
            h-10 
            pl-2 
            pr-2
            rounded-lg 
            shadow-lg
            bg-gradient-to-b 
             ${pathname === tab.href ? "from-red-500" : "from-fuchsia-500"}`}
              key={tab.key} onClick={() => router.push(tab.href)}>
            {tab.label}
          </li>
        ))}
      </ul>
    </nav>
    {children}
    </body>
    </html>
  );
}
